#!/bin/sh

# Downloads current version of youtube_dl, extracts the python module to youtube_dl/

OUTPUT_DIRECTORY=youtube_dl/
VERSION_STRING="$(youtube-dl --version)"
ZIP_OUTPUT="youtube-dl.zip"

# Zip file's main directory
# File name scheme changes with version
TMP_OUTPUT="youtube-dl-${VERSION_STRING}"

####

# Extract files:

cat > main.py <<EOF
from youtube_dl.options import parseOpts
import json

(parser, _, _) = parseOpts()

for optionGroup in parser.data:
	for option in optionGroup['options']:
		if 'type' in option['named']:
			v = option['named']['type']
			# "type" cannot be encoded. Use the name of it instead.
			if isinstance(v, type):
				v = v.__name__
			option['named']['type'] = v
		# function cannot be encoded, we can just note that there is one
		if 'callback' in option['named']:
			option['named']['callback'] = True
print(json.dumps({'data': parser.data}))
EOF

cat > optparse2.py <<EOF
# stubs for replacing optparse

SUPPRESS_HELP=None

class IndentedHelpFormatter:
	def __init__(self, **argv):
		pass

class OptionGroup:
	def __init__(self, _, name):
		self.data = { "name": name, "options": [] }
		pass

	def add_option(self, *args, **argv):
		self.data["options"].append({"positional": args, "named": argv})

class FakeOpts:
	def __init__(self):
		self.verbose = False

class OptionParser:
	def __init__(self, **argv):
		self.data = []
		pass

	def add_option_group(self, optionGroup):
		self.data.append(optionGroup.data)
		pass

	def parse_args(self, *args):
		# This is called only after last option added.
		# Dump output or do whatever :)
		return (FakeOpts(), None)
EOF

# Remove old output dir, if any
# TODO check if youtube_dl is already there, only update if the version is different
rm -rf "$OUTPUT_DIRECTORY"

# Download from releases
curl -L "https://github.com/ytdl-org/youtube-dl/archive/${VERSION_STRING}.zip" --output "${ZIP_OUTPUT}"

# Extract package, redirect output to stderr
unzip "$ZIP_OUTPUT" 1>&2
mv "$TMP_OUTPUT"/youtube_dl .

# Use our mock module instead of optparse:
# (Old config is saved at options.py.bak)
sed -i.bak 's/import optparse/import optparse2 as optparse/' youtube_dl/options.py


# Test
python3 main.py

# Remove intermediate files
rm main.py optparse2.py
rm -rf "$TMP_OUTPUT"
rm "$ZIP_OUTPUT"
